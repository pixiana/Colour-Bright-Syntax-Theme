/*
 * Your Stylesheet
 *
 * This stylesheet is loaded when Atom starts up and is reloaded automatically
 * when it is changed and saved.
 *
 * Add your own CSS or Less to fully customize Atom.
 * If you are unfamiliar with Less, you can read more about it here:
 * http://lesscss.org
 */

/*
 * Examples
 * (To see them, uncomment and save)
 */

@text-color: hsl(250, 100%, 25%);
@text-color-subtle: hsl(250, 20%, 65%);
@text-color-highlight: hsl(260, 70%, 50%);
@text-color-selected: hsl(300, 80%, 40%);

@text-color-info: hsl(250, 70%, 60%);
@text-color-success:  hsl(350, 100%, 92%;
@text-color-warning: hsl(030, 90%, 35%);
@text-color-error: hsl(190, 100%, 87%);

@background-color-info: hsl(045, 100%, 91%);
@background-color-success: hsl(180, 70%, 30%);
@background-color-warning: hsl(220, 100%,88%);
@background-color-error: hsl(330, 70%, 40%);

@background-color-highlight: hsl(080, 90%, 80%);
@background-color-selected: hsl(180, 90%, 80%);
@app-background-color: hsl(070, 96%, 94%);
@gutter-background: hsl(250, 96%, 90%);
@fold-marker: hsl(250, 60%, 85%);

.div.title {
	font-family: "SF Pro", "SF Compact Round", "SF Compact Text", "GNU Unifont Full";
}
.atom-workspace {
	font-family: "SF Pro", "GNU Unifont Full";
	color: @text-color-subtle;
}
.ul.list-inline.tab-bar.inset-panel {
	font-family: "SF Pro", "SF Mono", "GNU Unifont Full";
}
// style the background color of the tree view
.tree-view {
	font-family: "SF Pro", "SF Compact Round", "SF Compact Text", "GNU Unifont Full", "STIX General";
	color: @text-color-info;
	background-color: @background-color-info;
}
// style the background and foreground colors on the atom-text-editor-element itself
atom-text-editor {
	font-family: "SF Mono", "SF Pro", "GNU Unifont Full";
	color: @text-color;
	background-color: @app-background-color;
	text-decoration-style: @background-color-selected;
	.invisible-character {
		color: @background-color-info;
	}
	.gutter {
		background-color: @gutter-background;
		color: @text-color-subtle;
		.line-number {
			&.cursor-line {
				background-color: @background-color-highlight;
				color: @text-color-highlight;
			}
			&.cursor-line-no-selection {
				background-color: @gutter-background;
				color: @text-color-subtle;
			}
		}
	}

	.gutter .line-number.folded,
	.gutter .line-number:after,
		.fold-marker:after {
		color: @fold-marker;
	}

	.invisible {
		color: @background-color-info;
	}

	.cursor {
		color: hsl(330, 100%, 50%);
	}

	.selection .region {
		background-color: @background-color-selected;
		color: @text-color-selected;
	}
}


// SYNTAX


@syntax-function-name: #B217E5;
@syntax-class: #57C3A1;
//@syntax-class-inherited: #57C3A1;
//@syntax-type: #57C3A1;
//@section:
@tag:




// applescript
.syntax--comment {
    color: #fc46b4;
}
.syntax--string{
	color: #0F9982;
}
.syntax--constant.numeric  {
    color: #2198A6;
}
.syntax--variable {
    color: #008080;
}
.syntax--built-in constant, .syntax--constant.syntax--language {
    color: #BF9643;
}
.syntax--user-defined constant, .syntax--constant.syntax--character, .syntax--constant.syntax--other  {
	color: ##BE00A4;
	}
.syntax--variable, .syntax--variable.syntax--parameter {
    color: ##EA17AF;
}
.syntax--keyword {
    color: ##0F00B2;
}
.syntax--storage  {
    color: #FB0064;
}
.syntax--entity.name.class  {
    color: #57C3A1;
}
.syntax--entity.name.function, .syntax--entity.syntax--name.syntax--function  {
    color: #B217E5;
}
 .syntax--entity.other.inherited-class  {
     color: #57C3A1;
 }
.syntax--variable.parameter, .syntax--variable.syntax--parameter  {
    color: #09B2B0;
}
.syntax--entity.name.tag, .syntax--keyword.syntax--function  {
    color: #5749F2;
}
.syntax--entity.other.attribute-name  {
    color: #4D7299;
}
.syntax--support.function, .syntax--support.syntax--function {
    color: #5749F2;
}
.syntax--support.constant, .syntax--support .syntax--constant  {
    color: #1FA4C5;
}
.syntax--support.type, .syntax--support.syntax--type  {
    color: #B5872B;
}
.syntax--support.variable  {
    color: #A5A6F4;
}
